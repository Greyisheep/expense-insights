-- name: CreateUser :one
INSERT INTO users (
  email, password_hash, first_name, last_name, phone_number, status, role
) VALUES (
  $1, $2, $3, $4, $5, $6, $7
)
RETURNING *;

-- name: GetUserByEmail :one
SELECT * FROM users
WHERE email = $1 LIMIT 1;

-- name: GetUserByID :one
SELECT * FROM users
WHERE id = $1 LIMIT 1;

-- name: UpdateUser :one
UPDATE users
SET
  first_name = $2,
  last_name = $3,
  phone_number = $4,
  status = $5,
  role = $6,
  password_hash = $7, -- Only update password if provided
  last_login_at = $8, -- Allow updating last login
  updated_at = now()
WHERE id = $1
RETURNING *;

-- Note: The UpdateUser query updates multiple fields.
-- The corresponding Go function generated by sqlc will take parameters for all these fields.
-- When calling it from your service, you'll often fetch the user first,
-- modify the necessary fields on the Go struct, and then pass the updated struct fields to the UpdateUser function.
-- Alternatively, you could create more specific update queries (e.g., UpdateUserPassword, UpdateUserStatus). 