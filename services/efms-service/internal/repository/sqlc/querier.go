// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package sqlc

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	AddTagToStatement(ctx context.Context, arg AddTagToStatementParams) (StatementTag, error)
	CreateStatement(ctx context.Context, arg CreateStatementParams) (Statement, error)
	CreateUpload(ctx context.Context, arg CreateUploadParams) (Upload, error)
	DeleteStatementByIDAndUser(ctx context.Context, arg DeleteStatementByIDAndUserParams) error
	DeleteUpload(ctx context.Context, arg DeleteUploadParams) error
	GetStatementByIDAndUser(ctx context.Context, arg GetStatementByIDAndUserParams) (Statement, error)
	GetStatementStatusByIDAndUser(ctx context.Context, arg GetStatementStatusByIDAndUserParams) (GetStatementStatusByIDAndUserRow, error)
	GetTagsForStatement(ctx context.Context, statementID uuid.UUID) ([]string, error)
	GetUpload(ctx context.Context, arg GetUploadParams) (Upload, error)
	GetUploadByFileNameAndUser(ctx context.Context, arg GetUploadByFileNameAndUserParams) (Upload, error)
	ListStatementsByTagAndUser(ctx context.Context, arg ListStatementsByTagAndUserParams) ([]ListStatementsByTagAndUserRow, error)
	// TODO: Add tag filtering once statement_tags queries are in place and we decide on join strategy
	ListStatementsByUser(ctx context.Context, arg ListStatementsByUserParams) ([]ListStatementsByUserRow, error)
	RemoveAllTagsFromStatement(ctx context.Context, statementID uuid.UUID) error
	RemoveTagFromStatement(ctx context.Context, arg RemoveTagFromStatementParams) error
	UpdateStatementMetadataByIDAndUser(ctx context.Context, arg UpdateStatementMetadataByIDAndUserParams) (Statement, error)
	UpdateStatementStatusAndProgress(ctx context.Context, arg UpdateStatementStatusAndProgressParams) (Statement, error)
	// Or any other relevant status
	UpdateUploadStatus(ctx context.Context, arg UpdateUploadStatusParams) (Upload, error)
}

var _ Querier = (*Queries)(nil)
